name: Semantic Release for Apps

on:
  push:
    branches:
      - master
    paths:
      - 'applications/**'

permissions: write-all

jobs:
  release:
    strategy:
      matrix:
        app: [app1, app2] # Add all application directories you want to run
    name: Semantic Release for ${{ matrix.app }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Get the name of the directory that was changed
      - name: Get changed directory
        id: changed_dir
        run: |
          modified_files=$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | grep -E '^applications/(app1|app2)/')
          if echo "$modified_files" | grep -qE '^applications/app1/'; then
            echo "::set-output name=dir::app1"
          elif echo "$modified_files" | grep -qE '^applications/app2/'; then
            echo "::set-output name=dir::app2"
          else
            echo "No changes in app1 or app2 folder."
            exit 1
          fi

      # Only run the job for the changed directory
      - name: Check app name
        run: |
          if [[ "${{ matrix.app }}" != "${{ steps.changed_dir.outputs.dir }}" ]]; then
            echo "Skipping job for ${{ matrix.app }} as it has no changes."
            exit 0
          fi
      - name: Print changed directory
        run: |
          echo "Changed directory: ${{ steps.changed_dir.outputs.dir }}"

      # Update the tag format to include the name of the directory
      - name: Update tag format
        id: update_tag_format
        if: ${{ matrix.app == steps.changed_dir.outputs.dir }}
        run: 
          echo "::set-output name=tag_format::${{ steps.changed_dir.outputs.dir }}-v\${version}"
        # env:
        #   VERSION: ${{ github.run_number }}

      - name: Add new version to changelog
        id: add_version_to_changelog
        run: |
          version=$(git describe --tags --abbrev=0)
          sed -i "s/\[[0-9]\+\.[0-9]\+\.[0-9]\+\]/[${version}] $(date +'%Y-%m-%d')/" CHANGELOG.md        
        continue-on-error: true 

      # https://github.com/marketplace/actions/semantic-release-action#usage
      - name: Semantic Release
        uses: docker://ghcr.io/codfish/semantic-release-action:v2
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GITHUB2 }}
        with:
          tag_format: '${{ steps.update_tag_format.outputs.tag_format }}'
          additional_packages: |
            ['@semantic-release/changelog', '@semantic-release/git']
          plugins: |
            ['@semantic-release/commit-analyzer', '@semantic-release/release-notes-generator', ['@semantic-release/changelog', {changelogTitle: '# CHANGELOG'}], '@semantic-release/github', '@semantic-release/git']
          # specify default branches to add support for the `main` branch
          # which semantic-release doesn't have as a default yet.
          branches: |
            [
              'master'
            ]

      # # Get the latest version tag
      # - name: Get latest version tag
      #   run: |
      #     version=$(git describe --tags --abbrev=0)
      #     echo "::set-output name=version::$version"

      - name: Semantic Release Output Summary
        id: semantic_summary
        run: |
          echo "### Semantic Version = ${{ steps.semantic.outputs.release-version }}\`" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "${{ toJson(steps.semantic.outputs) }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        continue-on-error: true